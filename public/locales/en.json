
{
    "uploadZip": "Upload ZIP",
    "uploadZipTitle": "Upload a project .zip file",
    "analyzeProject": "Analyze Project",
    "analyzeProjectTitle": "Analyze the project files with AI",
    "analyzing": "Analyzing...",
    "settings": "Settings",
    "projectExplorer": "Project Explorer",
    "noProjectLoaded": "No project loaded",
    "uploadZipToStart": "Upload a ZIP archive to get started.",
    "diagramCode": "Diagram Code",
    "diagramCodePlaceholder": "Type diagram code here, or generate it from an idea...",
    "renderDiagram": "Render Diagram",
    "diagramViewer": "Diagram Viewer",
    "exportPNG": "Export as PNG",
    "exportSVG": "Export as SVG",
    "downloadSourceCode": "Download Source Code",
    "exportDocs": "Generate Docs (HTML)",
    "exportWhitepaper": "Generate Whitepaper (HTML)",
    "exportManual": "Generate Manual",
    "exportProjectMarkdown": "Download Project as Markdown",
    "copyMarkdown": "Copy Markdown",
    "renderingDiagram": "Rendering Diagram...",
    "analyzingProject": "Analyzing Project...",
    "diagramError": "Diagram Error",
    "fixWithAI": "Fix with AI",
    "aiCorrectionFailed": "AI Correction Failed",
    "aiCorrectionFailedMessage": "The AI could not fix the diagram after multiple attempts. Please try re-analyzing the project.",
    "diagramAppearHere": "Diagram will appear here",
    "uploadAndAnalyze": "Upload a project and click \"Analyze\"",
    "aiAnalysis": "AI Architecture Analysis",
    "copiedToClipboard": "copied to clipboard!",
    "failedToCopy": "Failed to copy",
    "zipError": "Failed to process ZIP file. It might be corrupted or in an unsupported format.",
    "noFilesToAnalyze": "No project files loaded to analyze.",
    "noIdeaToAnalyze": "Please enter a description of your idea first.",
    "aiAnalysisFailed": "Failed to get analysis from AI",
    "aiCorrectionAttempt": "AI attempt #{attempt} to correct the diagram.",
    "aiCorrectionFailedAttempt": "AI correction attempt #{attempt} failed",
    "manualRenderExplanation": "Displaying manually edited code. AI analysis has been cleared.",
    "settingsTitle": "Application Settings",
    "language": "Language",
    "diagramType": "Diagram Type",
    "diagrammingLanguage": "Diagramming Language",
    "mermaid": "Mermaid",
    "plantuml": "PlantUML",
    "themeSettings": "Theme Settings",
    "background": "Background",
    "primaryColor": "Primary Color",
    "secondaryColor": "Secondary Color",
    "textColor": "Text Color",
    "lineColor": "Line Color",
    "fontSize": "Font Size",
    "close": "Close",
    "classDiagram": "Class Diagram",
    "flowchart": "Flowchart",
    "sequenceDiagram": "Sequence Diagram",
    "stateDiagram": "State Diagram",
    "analyzeExistingProject": "Analyze Project",
    "architectFromIdea": "Architect from Idea",
    "agentSystem": "Agent System",
    "businessPlanGenerator": "Business Plan",
    "pitchDeckGenerator": "Pitch Deck",
    "startupPlanner": "Startup Planner",
    "describeYourIdea": "Describe your software idea in detail...",
    "generateArchitecture": "Generate Architecture",
    "generatingArchitecture": "Generating Architecture...",
    "technicalDocumentation": "Technical Documentation",
    "downloadHTML": "Download as HTML",
    "downloadPDF": "Download as PDF",
    "ideaGenerationFailed": "Failed to generate architecture from idea.",
    "ideaArchitectWelcome": "Welcome to the Idea Architect",
    "ideaArchitectDescription": "Describe your vision, and our AI will design the blueprint, including diagrams, documentation, and a whitepaper.",
    "diagram": "Diagram",
    "superprompt": "Superprompt",
    "downloadMD": "Download as MD",
    "superpromptDescription": "This is a master prompt for a coding AI. Provide it to an advanced language model to generate the application code.",
    "mockup": "Mockup",
    "generateUIMockup": "Generate UI Mockup",
    "generateUIMockupDescription": "Use the generated Superprompt to create a visual UI mockup of the application.",
    "generateMockup": "Generate Mockup",
    "generatingMockup": "Generating Mockup...",
    "mockupGenerationFailed": "Failed to generate mockup.",
    "userManual": "User Manual",
    "generateUserManual": "Generate User Manual",
    "generatingManual": "Generating Manual...",
    "manualGenerationFailed": "Failed to generate manual.",
    "userManualDescription": "Generate a user-friendly manual for end-users based on the project specification.",
    "scaffolding": "Source Code",
    "generateScaffolding": "Generate Source Code",
    "generatingScaffolding": "Generating source code...",
    "scaffoldingDescription": "Generate the complete source code and file structure for the project based on the Superprompt, then download it as a ZIP.",
    "downloadScaffoldingZip": "Download Source Code ZIP",
    "scaffoldingGenerationFailed": "Failed to generate source code.",
    "selectFileToView": "Select a file to view its content.",
    "emptyFile": "File is empty or content could not be displayed.",
    "agentSystemPromptPlaceholder": "Describe your desired software project here. For example: 'Create a Python Flask web app for a simple to-do list with a SQLite database and a basic HTML frontend.'",
    "startNewProject": "Start New Project",
    "generateProject": "Generate Project",
    "generating": "Generating...",
    "agentSystemTitle": "Gemini Agent-based Code Generator",
    "jobStatusTitle": "Generation Status",
    "status": "Status",
    "progress": "Progress",
    "currentTask": "Current Task",
    "logs": "Logs",
    "waitingForLogs": "Waiting for logs...",
    "downloadProjectZip": "Download Project",
    "toggleFileExplorer": "Toggle File Explorer",
    "hideFileExplorer": "Hide File Explorer",
    "showFileExplorer": "Show File Explorer",
    "projectFileStructure": "Project File Structure",
    "errorOccurred": "An error occurred",
    "generationFailed": "Generation failed. Check logs for details.",
    "generationComplete": "Generation Complete!",
    "openingInEditor": "Opening project in editor...",
    "openInEditor": "Open Project in Editor",
    "agentSystemDescriptionShort": "Describe a project, and AI agents will build it.",
    "analyzeDirectory": "Analyze Directory",
    "analyzeDirectoryTitle": "Analyze contents of this directory",
    "analysisScope": "Analysis Scope",
    "projectRoot": "Project Root",
    "directoryEmpty": "This directory contains no files to analyze.",
    "debugProject": "Debug Project",
    "debuggingAgent": "Debugging Agent",
    "describeBugPlaceholder": "Describe the bug, paste an error message, or request a new feature...",
    "startDebugging": "Start Debugging",
    "debuggingAgentDescription": "AI agents will analyze your code, find the issue, and apply the fix.",
    "plannerAgentFixing": "Planner Agent: Analyzing code and devising a fix...",
    "coderAgentFixing": "Coder Agent: Applying fix to {filePath}...",
    "fixApplied": "Fix applied successfully! Review the changes.",
    "createFile": "New File",
    "createDirectory": "New Directory",
    "renameItem": "Rename",
    "deleteItem": "Delete",
    "enterNameFor": "Enter name for new {type}:",
    "enterNewNameFor": "Enter new name for \"{name}\":",
    "confirmDelete": "Are you sure you want to delete \"{name}\"?",
    "invalidName": "Invalid name. Slashes and double dots are not allowed.",
    "itemExists": "An item with this name already exists at this location.",
    "jobStarted": "System: New generation job started.",
    "debugJobStarted": "System: New debugging job started.",
    "initializing": "Initializing...",
    "businessPlanGeneratorTitle": "AI Business Plan Generator",
    "uploadBusinessDocs": "Upload Business Documents",
    "uploadDocsDescription": "Upload documents (.pdf, .docx, .xlsx, .md, .html) to provide context for your business plan.",
    "generateBusinessPlan": "Generate Business Plan",
    "generatingBusinessPlan": "Generating Business Plan...",
    "parsingFiles": "Parsing files...",
    "filesParsed": "Files parsed successfully.",
    "fileParseError": "Error parsing file: {fileName}",
    "agentStatus": "Agent Status",
    "agentLog": "Agent Log",
    "agentTaskAnalysis": "Summarizing documents and identifying gaps...",
    "agentTaskAnalysisComplete": "Analysis complete.",
    "agentTaskGeneric": "Working on section...",
    "agentTaskComplete": "Section complete.",
    "businessPlanComplete": "Business plan generated successfully!",
    "businessPlanFailed": "Business plan generation failed.",
    "businessPlanPreview": "Business Plan Preview",
    "estimatedDataNotice": "This section contains data estimated by the AI based on the provided context.",
    "noFilesForPlan": "No files have been parsed. Please upload documents first.",
    "unsupportedFileType": "File type not supported: {fileName}",
    "uploadPitchDeckDocs": "Upload Relevant Documents",
    "uploadPitchDeckDocsDescription": "Upload documents (.md, .pdf, images, etc.) to automatically generate a professional pitch deck.",
    "generatePitchDeck": "Generate Pitch Deck",
    "generatingPitchDeck": "Generating Pitch Deck...",
    "pitchDeckPreview": "Pitch Deck Preview",
    "agentTaskPitchDeck": "Synthesizing information and generating pitch deck...",
    "pitchDeckComplete": "Pitch deck generated successfully!",
    "pitchDeckFailed": "Pitch deck generation failed.",
    "reset": "Start Over",
    "startupPlannerTitle": "AI Startup Founder Planner",
    "uploadStartupDocs": "Upload Founder Documents",
    "uploadStartupDocsDescription": "Upload any relevant files (.html, .docx, .xlsx, .md, .txt, .json, images) for the AI to analyze.",
    "generateStartupPlan": "Generate Startup Plan",
    "generatingStartupPlan": "Generating Startup Plan...",
    "startupPlanComplete": "Startup plan generated successfully!",
    "startupPlanFailed": "Startup plan generation failed.",
    "startupPlanPreview": "Startup Plan Preview",
    "diagramImportedFromIdea": "Diagram imported from 'Architect from Idea' mode. You can now upload a project to refine it.",
    "generateDiagramFromIdea": "Generate Diagram from Idea",
    "generateFromIdea": "Generate from Idea",
    "ideaInputPlaceholder": "e.g., A user authentication flow with login, registration, and password reset screens that connect to a user database...",
    "generate": "Generate",
    "diagramGeneratedFromIdea": "Diagram generated from your idea.",
    "clearDiagram": "Clear Diagram",
    "changeDiagramType": "Change diagram type",
    "generatePlan": "Generate Plan",
    "generatingPlan": "Generating Plan...",
    "generateDiagram": "Generate Diagram",
    "generatingDiagram": "Generating Diagram...",
    "generateDocs": "Generate Documentation",
    "generatingDocs": "Generating Documentation...",
    "generateWhitepaper": "Generate Whitepaper",
    "generatingWhitepaper": "Generating Whitepaper...",
    "planDescription": "Start by describing your idea. The AI will generate a detailed project plan (Superprompt).",
    "diagramTabDescription": "Generate a visual architecture diagram based on the created project plan.",
    "docsTabDescription": "Generate detailed technical documentation from the project plan. A diagram must be generated first.",
    "whitepaperTabDescription": "Generate a professional whitepaper from the project plan. A diagram must be generated first."
}
